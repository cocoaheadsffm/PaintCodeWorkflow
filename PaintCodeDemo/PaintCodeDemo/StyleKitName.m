//
//  StyleKitName.m
//  PaintCodeWorkflow
//
//  Created by Carl Jahn + Florian Bachmann on 14.06.15.
//  Copyright (c) 2015 Flori + Carl. All rights reserved.
//
//  Generated by PaintCode (www.paintcodeapp.com)
//

#import "StyleKitName.h"


@implementation StyleKitName

#pragma mark Initialization

+ (void)initialize
{
}

#pragma mark Drawing Methods

+ (void)drawWLANWithFrame: (CGRect)frame outer: (BOOL)outer inner: (BOOL)inner
{
    //// Color Declarations
    UIColor* baseColor = [UIColor colorWithRed: 0.494 green: 0.796 blue: 0.961 alpha: 1];
    CGFloat baseColorRGBA[4];
    [baseColor getRed: &baseColorRGBA[0] green: &baseColorRGBA[1] blue: &baseColorRGBA[2] alpha: &baseColorRGBA[3]];

    UIColor* baseColor2 = [UIColor colorWithRed: (baseColorRGBA[0] * 0.8) green: (baseColorRGBA[1] * 0.8) blue: (baseColorRGBA[2] * 0.8) alpha: (baseColorRGBA[3] * 0.8 + 0.2)];
    UIColor* fillColor2 = [UIColor colorWithRed: 0.502 green: 0.502 blue: 0.514 alpha: 1];


    //// Subframes
    CGRect wlan_graphical_01svgGroup = CGRectMake(CGRectGetMinX(frame), CGRectGetMinY(frame), CGRectGetWidth(frame), CGRectGetHeight(frame) - 0.3);


    //// wlan_graphical_01.svg Group
    {
        if (inner)
        {
            //// Bezier Drawing
            UIBezierPath* bezierPath = UIBezierPath.bezierPath;
            [bezierPath moveToPoint: CGPointMake(CGRectGetMinX(wlan_graphical_01svgGroup) + 0.50000 * CGRectGetWidth(wlan_graphical_01svgGroup), CGRectGetMinY(wlan_graphical_01svgGroup) + 0.25135 * CGRectGetHeight(wlan_graphical_01svgGroup))];
            [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(wlan_graphical_01svgGroup) + 0.75000 * CGRectGetWidth(wlan_graphical_01svgGroup), CGRectGetMinY(wlan_graphical_01svgGroup) + 0.50269 * CGRectGetHeight(wlan_graphical_01svgGroup)) controlPoint1: CGPointMake(CGRectGetMinX(wlan_graphical_01svgGroup) + 0.63750 * CGRectGetWidth(wlan_graphical_01svgGroup), CGRectGetMinY(wlan_graphical_01svgGroup) + 0.25135 * CGRectGetHeight(wlan_graphical_01svgGroup)) controlPoint2: CGPointMake(CGRectGetMinX(wlan_graphical_01svgGroup) + 0.75000 * CGRectGetWidth(wlan_graphical_01svgGroup), CGRectGetMinY(wlan_graphical_01svgGroup) + 0.36445 * CGRectGetHeight(wlan_graphical_01svgGroup))];
            [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(wlan_graphical_01svgGroup) + 0.58036 * CGRectGetWidth(wlan_graphical_01svgGroup), CGRectGetMinY(wlan_graphical_01svgGroup) + 0.73968 * CGRectGetHeight(wlan_graphical_01svgGroup)) controlPoint1: CGPointMake(CGRectGetMinX(wlan_graphical_01svgGroup) + 0.75000 * CGRectGetWidth(wlan_graphical_01svgGroup), CGRectGetMinY(wlan_graphical_01svgGroup) + 0.61221 * CGRectGetHeight(wlan_graphical_01svgGroup)) controlPoint2: CGPointMake(CGRectGetMinX(wlan_graphical_01svgGroup) + 0.67857 * CGRectGetWidth(wlan_graphical_01svgGroup), CGRectGetMinY(wlan_graphical_01svgGroup) + 0.70736 * CGRectGetHeight(wlan_graphical_01svgGroup))];
            [bezierPath addLineToPoint: CGPointMake(CGRectGetMinX(wlan_graphical_01svgGroup) + 0.58036 * CGRectGetWidth(wlan_graphical_01svgGroup), CGRectGetMinY(wlan_graphical_01svgGroup) + 0.79533 * CGRectGetHeight(wlan_graphical_01svgGroup))];
            [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(wlan_graphical_01svgGroup) + 0.80357 * CGRectGetWidth(wlan_graphical_01svgGroup), CGRectGetMinY(wlan_graphical_01svgGroup) + 0.50269 * CGRectGetHeight(wlan_graphical_01svgGroup)) controlPoint1: CGPointMake(CGRectGetMinX(wlan_graphical_01svgGroup) + 0.70893 * CGRectGetWidth(wlan_graphical_01svgGroup), CGRectGetMinY(wlan_graphical_01svgGroup) + 0.76122 * CGRectGetHeight(wlan_graphical_01svgGroup)) controlPoint2: CGPointMake(CGRectGetMinX(wlan_graphical_01svgGroup) + 0.80357 * CGRectGetWidth(wlan_graphical_01svgGroup), CGRectGetMinY(wlan_graphical_01svgGroup) + 0.64273 * CGRectGetHeight(wlan_graphical_01svgGroup))];
            [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(wlan_graphical_01svgGroup) + 0.50000 * CGRectGetWidth(wlan_graphical_01svgGroup), CGRectGetMinY(wlan_graphical_01svgGroup) + 0.19749 * CGRectGetHeight(wlan_graphical_01svgGroup)) controlPoint1: CGPointMake(CGRectGetMinX(wlan_graphical_01svgGroup) + 0.80357 * CGRectGetWidth(wlan_graphical_01svgGroup), CGRectGetMinY(wlan_graphical_01svgGroup) + 0.33393 * CGRectGetHeight(wlan_graphical_01svgGroup)) controlPoint2: CGPointMake(CGRectGetMinX(wlan_graphical_01svgGroup) + 0.66786 * CGRectGetWidth(wlan_graphical_01svgGroup), CGRectGetMinY(wlan_graphical_01svgGroup) + 0.19749 * CGRectGetHeight(wlan_graphical_01svgGroup))];
            [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(wlan_graphical_01svgGroup) + 0.19643 * CGRectGetWidth(wlan_graphical_01svgGroup), CGRectGetMinY(wlan_graphical_01svgGroup) + 0.50269 * CGRectGetHeight(wlan_graphical_01svgGroup)) controlPoint1: CGPointMake(CGRectGetMinX(wlan_graphical_01svgGroup) + 0.33214 * CGRectGetWidth(wlan_graphical_01svgGroup), CGRectGetMinY(wlan_graphical_01svgGroup) + 0.19749 * CGRectGetHeight(wlan_graphical_01svgGroup)) controlPoint2: CGPointMake(CGRectGetMinX(wlan_graphical_01svgGroup) + 0.19643 * CGRectGetWidth(wlan_graphical_01svgGroup), CGRectGetMinY(wlan_graphical_01svgGroup) + 0.33393 * CGRectGetHeight(wlan_graphical_01svgGroup))];
            [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(wlan_graphical_01svgGroup) + 0.41964 * CGRectGetWidth(wlan_graphical_01svgGroup), CGRectGetMinY(wlan_graphical_01svgGroup) + 0.79713 * CGRectGetHeight(wlan_graphical_01svgGroup)) controlPoint1: CGPointMake(CGRectGetMinX(wlan_graphical_01svgGroup) + 0.19643 * CGRectGetWidth(wlan_graphical_01svgGroup), CGRectGetMinY(wlan_graphical_01svgGroup) + 0.64273 * CGRectGetHeight(wlan_graphical_01svgGroup)) controlPoint2: CGPointMake(CGRectGetMinX(wlan_graphical_01svgGroup) + 0.29107 * CGRectGetWidth(wlan_graphical_01svgGroup), CGRectGetMinY(wlan_graphical_01svgGroup) + 0.76122 * CGRectGetHeight(wlan_graphical_01svgGroup))];
            [bezierPath addLineToPoint: CGPointMake(CGRectGetMinX(wlan_graphical_01svgGroup) + 0.41964 * CGRectGetWidth(wlan_graphical_01svgGroup), CGRectGetMinY(wlan_graphical_01svgGroup) + 0.74147 * CGRectGetHeight(wlan_graphical_01svgGroup))];
            [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(wlan_graphical_01svgGroup) + 0.25000 * CGRectGetWidth(wlan_graphical_01svgGroup), CGRectGetMinY(wlan_graphical_01svgGroup) + 0.50269 * CGRectGetHeight(wlan_graphical_01svgGroup)) controlPoint1: CGPointMake(CGRectGetMinX(wlan_graphical_01svgGroup) + 0.32143 * CGRectGetWidth(wlan_graphical_01svgGroup), CGRectGetMinY(wlan_graphical_01svgGroup) + 0.70736 * CGRectGetHeight(wlan_graphical_01svgGroup)) controlPoint2: CGPointMake(CGRectGetMinX(wlan_graphical_01svgGroup) + 0.25000 * CGRectGetWidth(wlan_graphical_01svgGroup), CGRectGetMinY(wlan_graphical_01svgGroup) + 0.61221 * CGRectGetHeight(wlan_graphical_01svgGroup))];
            [bezierPath addCurveToPoint: CGPointMake(CGRectGetMinX(wlan_graphical_01svgGroup) + 0.50000 * CGRectGetWidth(wlan_graphical_01svgGroup), CGRectGetMinY(wlan_graphical_01svgGroup) + 0.25135 * CGRectGetHeight(wlan_graphical_01svgGroup)) controlPoint1: CGPointMake(CGRectGetMinX(wlan_graphical_01svgGroup) + 0.25000 * CGRectGetWidth(wlan_graphical_01svgGroup), CGRectGetMinY(wlan_graphical_01svgGroup) + 0.36445 * CGRectGetHeight(wlan_graphical_01svgGroup)) controlPoint2: CGPointMake(CGRectGetMinX(wlan_graphical_01svgGroup) + 0.36250 * CGRectGetWidth(wlan_graphical_01svgGroup), CGRectGetMinY(wlan_graphical_01svgGroup) + 0.25135 * CGRectGetHeight(wlan_graphical_01svgGroup))];
            [bezierPath closePath];
            bezierPath.miterLimit = 4;

            [baseColor2 setFill];
            [bezierPath fill];
        }


        if (outer)
        {
            //// Bezier 2 Drawing
            UIBezierPath* bezier2Path = UIBezierPath.bezierPath;
            [bezier2Path moveToPoint: CGPointMake(CGRectGetMinX(wlan_graphical_01svgGroup) + 0.50000 * CGRectGetWidth(wlan_graphical_01svgGroup), CGRectGetMinY(wlan_graphical_01svgGroup) + 0.00000 * CGRectGetHeight(wlan_graphical_01svgGroup))];
            [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(wlan_graphical_01svgGroup) + 0.00000 * CGRectGetWidth(wlan_graphical_01svgGroup), CGRectGetMinY(wlan_graphical_01svgGroup) + 0.50269 * CGRectGetHeight(wlan_graphical_01svgGroup)) controlPoint1: CGPointMake(CGRectGetMinX(wlan_graphical_01svgGroup) + 0.22321 * CGRectGetWidth(wlan_graphical_01svgGroup), CGRectGetMinY(wlan_graphical_01svgGroup) + 0.00000 * CGRectGetHeight(wlan_graphical_01svgGroup)) controlPoint2: CGPointMake(CGRectGetMinX(wlan_graphical_01svgGroup) + 0.00000 * CGRectGetWidth(wlan_graphical_01svgGroup), CGRectGetMinY(wlan_graphical_01svgGroup) + 0.22442 * CGRectGetHeight(wlan_graphical_01svgGroup))];
            [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(wlan_graphical_01svgGroup) + 0.41964 * CGRectGetWidth(wlan_graphical_01svgGroup), CGRectGetMinY(wlan_graphical_01svgGroup) + 0.99820 * CGRectGetHeight(wlan_graphical_01svgGroup)) controlPoint1: CGPointMake(CGRectGetMinX(wlan_graphical_01svgGroup) + 0.00000 * CGRectGetWidth(wlan_graphical_01svgGroup), CGRectGetMinY(wlan_graphical_01svgGroup) + 0.75224 * CGRectGetHeight(wlan_graphical_01svgGroup)) controlPoint2: CGPointMake(CGRectGetMinX(wlan_graphical_01svgGroup) + 0.18214 * CGRectGetWidth(wlan_graphical_01svgGroup), CGRectGetMinY(wlan_graphical_01svgGroup) + 0.96050 * CGRectGetHeight(wlan_graphical_01svgGroup))];
            [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(wlan_graphical_01svgGroup) + 0.41964 * CGRectGetWidth(wlan_graphical_01svgGroup), CGRectGetMinY(wlan_graphical_01svgGroup) + 0.94434 * CGRectGetHeight(wlan_graphical_01svgGroup))];
            [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(wlan_graphical_01svgGroup) + 0.05357 * CGRectGetWidth(wlan_graphical_01svgGroup), CGRectGetMinY(wlan_graphical_01svgGroup) + 0.50269 * CGRectGetHeight(wlan_graphical_01svgGroup)) controlPoint1: CGPointMake(CGRectGetMinX(wlan_graphical_01svgGroup) + 0.21250 * CGRectGetWidth(wlan_graphical_01svgGroup), CGRectGetMinY(wlan_graphical_01svgGroup) + 0.90664 * CGRectGetHeight(wlan_graphical_01svgGroup)) controlPoint2: CGPointMake(CGRectGetMinX(wlan_graphical_01svgGroup) + 0.05357 * CGRectGetWidth(wlan_graphical_01svgGroup), CGRectGetMinY(wlan_graphical_01svgGroup) + 0.72352 * CGRectGetHeight(wlan_graphical_01svgGroup))];
            [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(wlan_graphical_01svgGroup) + 0.50000 * CGRectGetWidth(wlan_graphical_01svgGroup), CGRectGetMinY(wlan_graphical_01svgGroup) + 0.05386 * CGRectGetHeight(wlan_graphical_01svgGroup)) controlPoint1: CGPointMake(CGRectGetMinX(wlan_graphical_01svgGroup) + 0.05357 * CGRectGetWidth(wlan_graphical_01svgGroup), CGRectGetMinY(wlan_graphical_01svgGroup) + 0.25494 * CGRectGetHeight(wlan_graphical_01svgGroup)) controlPoint2: CGPointMake(CGRectGetMinX(wlan_graphical_01svgGroup) + 0.25357 * CGRectGetWidth(wlan_graphical_01svgGroup), CGRectGetMinY(wlan_graphical_01svgGroup) + 0.05386 * CGRectGetHeight(wlan_graphical_01svgGroup))];
            [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(wlan_graphical_01svgGroup) + 0.94643 * CGRectGetWidth(wlan_graphical_01svgGroup), CGRectGetMinY(wlan_graphical_01svgGroup) + 0.50269 * CGRectGetHeight(wlan_graphical_01svgGroup)) controlPoint1: CGPointMake(CGRectGetMinX(wlan_graphical_01svgGroup) + 0.74643 * CGRectGetWidth(wlan_graphical_01svgGroup), CGRectGetMinY(wlan_graphical_01svgGroup) + 0.05386 * CGRectGetHeight(wlan_graphical_01svgGroup)) controlPoint2: CGPointMake(CGRectGetMinX(wlan_graphical_01svgGroup) + 0.94643 * CGRectGetWidth(wlan_graphical_01svgGroup), CGRectGetMinY(wlan_graphical_01svgGroup) + 0.25494 * CGRectGetHeight(wlan_graphical_01svgGroup))];
            [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(wlan_graphical_01svgGroup) + 0.58036 * CGRectGetWidth(wlan_graphical_01svgGroup), CGRectGetMinY(wlan_graphical_01svgGroup) + 0.94434 * CGRectGetHeight(wlan_graphical_01svgGroup)) controlPoint1: CGPointMake(CGRectGetMinX(wlan_graphical_01svgGroup) + 0.94643 * CGRectGetWidth(wlan_graphical_01svgGroup), CGRectGetMinY(wlan_graphical_01svgGroup) + 0.72172 * CGRectGetHeight(wlan_graphical_01svgGroup)) controlPoint2: CGPointMake(CGRectGetMinX(wlan_graphical_01svgGroup) + 0.78750 * CGRectGetWidth(wlan_graphical_01svgGroup), CGRectGetMinY(wlan_graphical_01svgGroup) + 0.90664 * CGRectGetHeight(wlan_graphical_01svgGroup))];
            [bezier2Path addLineToPoint: CGPointMake(CGRectGetMinX(wlan_graphical_01svgGroup) + 0.58036 * CGRectGetWidth(wlan_graphical_01svgGroup), CGRectGetMinY(wlan_graphical_01svgGroup) + 0.99820 * CGRectGetHeight(wlan_graphical_01svgGroup))];
            [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(wlan_graphical_01svgGroup) + 1.00000 * CGRectGetWidth(wlan_graphical_01svgGroup), CGRectGetMinY(wlan_graphical_01svgGroup) + 0.50269 * CGRectGetHeight(wlan_graphical_01svgGroup)) controlPoint1: CGPointMake(CGRectGetMinX(wlan_graphical_01svgGroup) + 0.81786 * CGRectGetWidth(wlan_graphical_01svgGroup), CGRectGetMinY(wlan_graphical_01svgGroup) + 0.96050 * CGRectGetHeight(wlan_graphical_01svgGroup)) controlPoint2: CGPointMake(CGRectGetMinX(wlan_graphical_01svgGroup) + 1.00000 * CGRectGetWidth(wlan_graphical_01svgGroup), CGRectGetMinY(wlan_graphical_01svgGroup) + 0.75224 * CGRectGetHeight(wlan_graphical_01svgGroup))];
            [bezier2Path addCurveToPoint: CGPointMake(CGRectGetMinX(wlan_graphical_01svgGroup) + 0.50000 * CGRectGetWidth(wlan_graphical_01svgGroup), CGRectGetMinY(wlan_graphical_01svgGroup) + 0.00000 * CGRectGetHeight(wlan_graphical_01svgGroup)) controlPoint1: CGPointMake(CGRectGetMinX(wlan_graphical_01svgGroup) + 1.00000 * CGRectGetWidth(wlan_graphical_01svgGroup), CGRectGetMinY(wlan_graphical_01svgGroup) + 0.22442 * CGRectGetHeight(wlan_graphical_01svgGroup)) controlPoint2: CGPointMake(CGRectGetMinX(wlan_graphical_01svgGroup) + 0.77679 * CGRectGetWidth(wlan_graphical_01svgGroup), CGRectGetMinY(wlan_graphical_01svgGroup) + 0.00000 * CGRectGetHeight(wlan_graphical_01svgGroup))];
            [bezier2Path closePath];
            bezier2Path.miterLimit = 4;

            [baseColor setFill];
            [bezier2Path fill];
        }


        //// Bezier 3 Drawing
        UIBezierPath* bezier3Path = UIBezierPath.bezierPath;
        [bezier3Path moveToPoint: CGPointMake(CGRectGetMinX(wlan_graphical_01svgGroup) + 0.60714 * CGRectGetWidth(wlan_graphical_01svgGroup), CGRectGetMinY(wlan_graphical_01svgGroup) + 0.50269 * CGRectGetHeight(wlan_graphical_01svgGroup))];
        [bezier3Path addCurveToPoint: CGPointMake(CGRectGetMinX(wlan_graphical_01svgGroup) + 0.50000 * CGRectGetWidth(wlan_graphical_01svgGroup), CGRectGetMinY(wlan_graphical_01svgGroup) + 0.39497 * CGRectGetHeight(wlan_graphical_01svgGroup)) controlPoint1: CGPointMake(CGRectGetMinX(wlan_graphical_01svgGroup) + 0.60714 * CGRectGetWidth(wlan_graphical_01svgGroup), CGRectGetMinY(wlan_graphical_01svgGroup) + 0.44345 * CGRectGetHeight(wlan_graphical_01svgGroup)) controlPoint2: CGPointMake(CGRectGetMinX(wlan_graphical_01svgGroup) + 0.55893 * CGRectGetWidth(wlan_graphical_01svgGroup), CGRectGetMinY(wlan_graphical_01svgGroup) + 0.39497 * CGRectGetHeight(wlan_graphical_01svgGroup))];
        [bezier3Path addCurveToPoint: CGPointMake(CGRectGetMinX(wlan_graphical_01svgGroup) + 0.39286 * CGRectGetWidth(wlan_graphical_01svgGroup), CGRectGetMinY(wlan_graphical_01svgGroup) + 0.50269 * CGRectGetHeight(wlan_graphical_01svgGroup)) controlPoint1: CGPointMake(CGRectGetMinX(wlan_graphical_01svgGroup) + 0.44107 * CGRectGetWidth(wlan_graphical_01svgGroup), CGRectGetMinY(wlan_graphical_01svgGroup) + 0.39497 * CGRectGetHeight(wlan_graphical_01svgGroup)) controlPoint2: CGPointMake(CGRectGetMinX(wlan_graphical_01svgGroup) + 0.39286 * CGRectGetWidth(wlan_graphical_01svgGroup), CGRectGetMinY(wlan_graphical_01svgGroup) + 0.44345 * CGRectGetHeight(wlan_graphical_01svgGroup))];
        [bezier3Path addCurveToPoint: CGPointMake(CGRectGetMinX(wlan_graphical_01svgGroup) + 0.47321 * CGRectGetWidth(wlan_graphical_01svgGroup), CGRectGetMinY(wlan_graphical_01svgGroup) + 0.60682 * CGRectGetHeight(wlan_graphical_01svgGroup)) controlPoint1: CGPointMake(CGRectGetMinX(wlan_graphical_01svgGroup) + 0.39286 * CGRectGetWidth(wlan_graphical_01svgGroup), CGRectGetMinY(wlan_graphical_01svgGroup) + 0.55296 * CGRectGetHeight(wlan_graphical_01svgGroup)) controlPoint2: CGPointMake(CGRectGetMinX(wlan_graphical_01svgGroup) + 0.42679 * CGRectGetWidth(wlan_graphical_01svgGroup), CGRectGetMinY(wlan_graphical_01svgGroup) + 0.59425 * CGRectGetHeight(wlan_graphical_01svgGroup))];
        [bezier3Path addLineToPoint: CGPointMake(CGRectGetMinX(wlan_graphical_01svgGroup) + 0.47321 * CGRectGetWidth(wlan_graphical_01svgGroup), CGRectGetMinY(wlan_graphical_01svgGroup) + 1.00000 * CGRectGetHeight(wlan_graphical_01svgGroup))];
        [bezier3Path addLineToPoint: CGPointMake(CGRectGetMinX(wlan_graphical_01svgGroup) + 0.52679 * CGRectGetWidth(wlan_graphical_01svgGroup), CGRectGetMinY(wlan_graphical_01svgGroup) + 1.00000 * CGRectGetHeight(wlan_graphical_01svgGroup))];
        [bezier3Path addLineToPoint: CGPointMake(CGRectGetMinX(wlan_graphical_01svgGroup) + 0.52679 * CGRectGetWidth(wlan_graphical_01svgGroup), CGRectGetMinY(wlan_graphical_01svgGroup) + 0.60682 * CGRectGetHeight(wlan_graphical_01svgGroup))];
        [bezier3Path addCurveToPoint: CGPointMake(CGRectGetMinX(wlan_graphical_01svgGroup) + 0.60714 * CGRectGetWidth(wlan_graphical_01svgGroup), CGRectGetMinY(wlan_graphical_01svgGroup) + 0.50269 * CGRectGetHeight(wlan_graphical_01svgGroup)) controlPoint1: CGPointMake(CGRectGetMinX(wlan_graphical_01svgGroup) + 0.57321 * CGRectGetWidth(wlan_graphical_01svgGroup), CGRectGetMinY(wlan_graphical_01svgGroup) + 0.59425 * CGRectGetHeight(wlan_graphical_01svgGroup)) controlPoint2: CGPointMake(CGRectGetMinX(wlan_graphical_01svgGroup) + 0.60714 * CGRectGetWidth(wlan_graphical_01svgGroup), CGRectGetMinY(wlan_graphical_01svgGroup) + 0.55296 * CGRectGetHeight(wlan_graphical_01svgGroup))];
        [bezier3Path closePath];
        bezier3Path.miterLimit = 4;

        [fillColor2 setFill];
        [bezier3Path fill];
    }
}

+ (void)drawClockBaseWithRefresh: (CGFloat)refresh timeinterval: (CGFloat)timeinterval
{
    //// General Declarations
    CGColorSpaceRef colorSpace = CGColorSpaceCreateDeviceRGB();
    CGContextRef context = UIGraphicsGetCurrentContext();

    //// Color Declarations
    UIColor* gradientColor3 = [UIColor colorWithRed: 0.651 green: 0.651 blue: 0.682 alpha: 1];
    UIColor* gradientColor4 = [UIColor colorWithRed: 0.722 green: 0.722 blue: 0.745 alpha: 1];
    UIColor* fillColor = [UIColor colorWithRed: 0.325 green: 0.729 blue: 0.949 alpha: 1];
    UIColor* fillColor3 = [UIColor colorWithRed: 0.286 green: 0.286 blue: 0.286 alpha: 1];

    //// Gradient Declarations
    CGFloat sVGID_2_Locations[] = {0, 1};
    CGGradientRef sVGID_2_ = CGGradientCreateWithColors(colorSpace, (__bridge CFArrayRef)@[(id)gradientColor3.CGColor, (id)gradientColor4.CGColor], sVGID_2_Locations);

    //// Variable Declarations
    CGFloat refresh_Angle = refresh * 360;
    CGFloat minutes = fmod(timeinterval, 3600) / 60.0;
    CGFloat minute_angle = -minutes * (1.0 / 60.0) * 360;
    CGFloat hours = timeinterval / 3600.0;
    CGFloat hour_angle = -hours * (1.0 / 12.0) * 360;

    //// Group
    {
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 28, 28);
        CGContextRotateCTM(context, -refresh_Angle * M_PI / 180);



        //// Bezier 2 Drawing
        UIBezierPath* bezier2Path = UIBezierPath.bezierPath;
        [bezier2Path moveToPoint: CGPointMake(-21.9, 15.6)];
        [bezier2Path addCurveToPoint: CGPointMake(-20.3, 14.6) controlPoint1: CGPointMake(-21.4, 15.1) controlPoint2: CGPointMake(-20.9, 14.8)];
        [bezier2Path addCurveToPoint: CGPointMake(-25, 0.1) controlPoint1: CGPointMake(-23.2, 10.5) controlPoint2: CGPointMake(-25, 5.5)];
        [bezier2Path addCurveToPoint: CGPointMake(-0.1, -25) controlPoint1: CGPointMake(-25, -13.7) controlPoint2: CGPointMake(-13.9, -25)];
        [bezier2Path addLineToPoint: CGPointMake(0, -25)];
        [bezier2Path addLineToPoint: CGPointMake(0, -25)];
        [bezier2Path addCurveToPoint: CGPointMake(9, -23.3) controlPoint1: CGPointMake(3.2, -25) controlPoint2: CGPointMake(6.2, -24.4)];
        [bezier2Path addLineToPoint: CGPointMake(9, -26.5)];
        [bezier2Path addCurveToPoint: CGPointMake(0, -28) controlPoint1: CGPointMake(6.2, -27.5) controlPoint2: CGPointMake(3.2, -28)];
        [bezier2Path addLineToPoint: CGPointMake(-0.1, -28)];
        [bezier2Path addCurveToPoint: CGPointMake(-28, 0.1) controlPoint1: CGPointMake(-15.6, -27.9) controlPoint2: CGPointMake(-28, -15.4)];
        [bezier2Path addCurveToPoint: CGPointMake(-22.6, 16.5) controlPoint1: CGPointMake(-28, 6.2) controlPoint2: CGPointMake(-26, 11.9)];
        [bezier2Path addCurveToPoint: CGPointMake(-21.9, 15.6) controlPoint1: CGPointMake(-22.4, 16.2) controlPoint2: CGPointMake(-22.2, 15.8)];
        [bezier2Path closePath];
        bezier2Path.miterLimit = 4;

        CGContextSaveGState(context);
        [bezier2Path addClip];
        CGContextDrawLinearGradient(context, sVGID_2_,
            CGPointMake(-9.5, 16.5),
            CGPointMake(-9.5, -28),
            kCGGradientDrawsBeforeStartLocation | kCGGradientDrawsAfterEndLocation);
        CGContextRestoreGState(context);


        //// Bezier 3 Drawing
        UIBezierPath* bezier3Path = UIBezierPath.bezierPath;
        [bezier3Path moveToPoint: CGPointMake(28, -26)];
        [bezier3Path addLineToPoint: CGPointMake(12, -26)];
        [bezier3Path addLineToPoint: CGPointMake(12, -10)];
        [bezier3Path addLineToPoint: CGPointMake(18.6, -16.6)];
        [bezier3Path addCurveToPoint: CGPointMake(25, 0) controlPoint1: CGPointMake(22.8, -12.1) controlPoint2: CGPointMake(25, -6.2)];
        [bezier3Path addCurveToPoint: CGPointMake(17.7, 17.7) controlPoint1: CGPointMake(25, 6.7) controlPoint2: CGPointMake(22.4, 13)];
        [bezier3Path addCurveToPoint: CGPointMake(-17.7, 17.7) controlPoint1: CGPointMake(8, 27.4) controlPoint2: CGPointMake(-7.9, 27.4)];
        [bezier3Path addCurveToPoint: CGPointMake(-19.8, 17.7) controlPoint1: CGPointMake(-18.3, 17.1) controlPoint2: CGPointMake(-19.2, 17.1)];
        [bezier3Path addCurveToPoint: CGPointMake(-19.8, 19.8) controlPoint1: CGPointMake(-20.4, 18.3) controlPoint2: CGPointMake(-20.4, 19.2)];
        [bezier3Path addCurveToPoint: CGPointMake(0, 28) controlPoint1: CGPointMake(-14.3, 25.3) controlPoint2: CGPointMake(-7.2, 28)];
        [bezier3Path addCurveToPoint: CGPointMake(19.8, 19.8) controlPoint1: CGPointMake(7.2, 28) controlPoint2: CGPointMake(14.3, 25.3)];
        [bezier3Path addCurveToPoint: CGPointMake(28, 0) controlPoint1: CGPointMake(25.1, 14.5) controlPoint2: CGPointMake(28, 7.5)];
        [bezier3Path addCurveToPoint: CGPointMake(20.8, -18.8) controlPoint1: CGPointMake(28, -7) controlPoint2: CGPointMake(25.4, -13.6)];
        [bezier3Path addLineToPoint: CGPointMake(28, -26)];
        [bezier3Path closePath];
        bezier3Path.miterLimit = 4;

        [fillColor setFill];
        [bezier3Path fill];



        CGContextRestoreGState(context);
    }


    //// Rectangle Drawing
    CGContextSaveGState(context);
    CGContextTranslateCTM(context, 28, 28.1);
    CGContextRotateCTM(context, -minute_angle * M_PI / 180);

    UIBezierPath* rectanglePath = [UIBezierPath bezierPathWithRect: CGRectMake(-1, -22.5, 1.9, 22.4)];
    [fillColor3 setFill];
    [rectanglePath fill];

    CGContextRestoreGState(context);


    //// Rectangle 2 Drawing
    CGContextSaveGState(context);
    CGContextTranslateCTM(context, 28, 28.1);
    CGContextRotateCTM(context, -(hour_angle + 180) * M_PI / 180);

    UIBezierPath* rectangle2Path = [UIBezierPath bezierPathWithRect: CGRectMake(-1.9, 0, 4, 17.4)];
    [fillColor3 setFill];
    [rectangle2Path fill];

    CGContextRestoreGState(context);


    //// Oval Drawing
    UIBezierPath* ovalPath = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(25, 25.1, 6, 6)];
    [fillColor3 setFill];
    [ovalPath fill];


    //// Cleanup
    CGGradientRelease(sVGID_2_);
    CGColorSpaceRelease(colorSpace);
}

+ (void)drawClockWithFrame: (CGRect)frame refresh: (CGFloat)refresh timeinterval: (CGFloat)timeinterval
{
    //// General Declarations
    CGContextRef context = UIGraphicsGetCurrentContext();

    //// Symbol Drawing
    CGRect symbolRect = CGRectMake(CGRectGetMinX(frame), CGRectGetMinY(frame), CGRectGetWidth(frame), CGRectGetHeight(frame));
    CGContextSaveGState(context);
    UIRectClip(symbolRect);
    CGContextTranslateCTM(context, symbolRect.origin.x, symbolRect.origin.y);
    CGContextScaleCTM(context, symbolRect.size.width / 56, symbolRect.size.height / 56);

    [StyleKitName drawClockBaseWithRefresh: refresh timeinterval: timeinterval];
    CGContextRestoreGState(context);
}

@end
